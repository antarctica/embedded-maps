version: '3.8'

services:
  test:
    image: mcr.microsoft.com/playwright:v1.50.1-noble
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      # Mount source code as read-only
      - .:/app:ro
      # Cache node_modules
      - docker_deps:/docker_cache
      # Match playwright.config.ts output locations
      - ./.test/spec/output:/tmp/.test/spec/output
      - ./.test/spec/ci-snaps:/tmp/.test/spec/ci-snaps
      - ./.test/spec/local-snaps:/tmp/.test/spec/local-snaps
      - ./out/report:/tmp/out/report
      # Cache Playwright browsers
      - playwright_cache:/root/.cache/ms-playwright
    environment:
      - CI=false
      - TZ=UTC
      - LANG=en_US.UTF-8
      - HOST=0.0.0.0
      - DEBUG=pw:api*
      - TEST_GREP=${TEST_GREP:-}
      - UPDATE_SNAPSHOTS=${UPDATE_SNAPSHOTS:-false}
    command: >
      /bin/bash -c "
        set -ex
        echo 'üöÄ Starting test process...'
        apt-get update && apt-get install -y rsync xvfb
        cd /tmp
        echo 'üìÅ Syncing project files...'
        rsync -av --exclude='package-lock.json' --exclude='node_modules' --exclude-from=/app/.gitignore /app/ .
        echo 'üì¶ Installing dependencies if needed...'
        if [ -f "/docker_cache/package-lock.json" ] && [ -d "/docker_cache/node_modules" ]; then
          echo 'Using cached dependencies...'
          cp /docker_cache/package-lock.json .
          cp -r /docker_cache/node_modules .
          npm run prepare
        else
          echo 'Fresh install needed...'
          npm install
          npm run prepare
          mkdir -p /docker_cache
          cp package-lock.json /docker_cache/
          cp -r node_modules /docker_cache/
        fi
        echo 'üé≠ Installing Playwright browsers...'
        npx playwright install --with-deps
        mkdir -p .test/spec/output .test/spec/ci-snaps .test/spec/local-snaps out/report
        echo 'üß™ Running tests...'
        if [ -z \"$TEST_GREP\" ]; then
          UPDATE_FLAGS=$([ \"$UPDATE_SNAPSHOTS\" = \"true\" ] && echo \"--update-snapshots\" || echo \"\")
          xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24' npx playwright test --workers="75%" $UPDATE_FLAGS
        else
          UPDATE_FLAGS=$([ \"$UPDATE_SNAPSHOTS\" = \"true\" ] && echo \"--update-snapshots\" || echo \"\")
          xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24' npx playwright test --workers="75%" $UPDATE_FLAGS --grep \"$TEST_GREP\"
        fi"

  update-screenshots:
    extends: test
    environment:
      - UPDATE_SNAPSHOTS=true

volumes:
  docker_deps:
  playwright_cache: